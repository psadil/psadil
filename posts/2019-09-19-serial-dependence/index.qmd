---
title: Serial Dependence
author: Patrick Sadil
date: '2019-09-19'
slug: serial-dependence
categories:
  - dissertation
tags: []
link-citations: true
bibliography: [one.bib]
---

```{r setup, include=FALSE}
renv::use(lockfile = "renv.lock")
library(gifski)
library(ragg)
# https://www.science-emergence.com/Articles/How-to-plot-a-Gabor-filter-using-python-and-matplotlib-/
ChangeBase <- function(x,y,theta){
  x_theta <- x * cos(theta) + y * sin(theta)
  y_theta <- y * cos(theta) - x * sin(theta)
  return(c(x_theta, y_theta))
}

GaborFunction <- function(x,y,theta,f,sigma_x,sigma_y){
  r1 <- ChangeBase(x,y,theta)[1] / sigma_x
  r2 <- ChangeBase(x,y,theta)[2] / sigma_y
  arg <- -0.5 * ( r1^2 + r2^2 )
  return(exp(arg) * cos(2*pi*f*ChangeBase(x,y,theta)[1]))
}

make_gabor <- function(f=0.1,
                       theta=0,
                       res = 5){
  sigma_x <- 7.0
  sigma_y <- 7.0
  radius <- 20
  r2 <- radius*2
  I <- J <- r2*res
  
  M <- matrix(0, nrow=I, ncol=J)
  x <- -radius
  X <- Y <- seq(-radius,radius,length.out = I)
  for (x in 1:I){
    for (y in 1:J){
      M[x,y] <- GaborFunction(X[x],Y[y],theta,f,sigma_x,sigma_y)
    }
  }
  colnames(M) <- stringr::str_c("...", 1:ncol(M))
  d <- tibble::as_tibble(M) |>
    dplyr::mutate(x=as.numeric(1:dplyr::n())) |>
    tidyr::pivot_longer(cols=tidyselect::starts_with("..."), names_to="y") |>
    dplyr::mutate(y = stringr::str_extract(y,"[[:digit:]]+"),
                  y = as.numeric(y))
  
  return(d)
}

```

Objects in the visual environment move suddenly and erratically, and visual perception must be sensitive to the changes that are important. But each saccade and head tilt change the image imprinted on the retina, and to perceive every tremor ignores the stability of the visual environment; a desk will still look like a desk in a few seconds. The visual system must therefore balance the ability to detect subtle changes in the environment against the efficiency afforded by accurate predictions. 

That the recent past influences current perception can be demonstrated easily. If you stare at @fig-tae, you might observe that the Gabor has a bend immediately after changing orientations. The bend lasts for a moment, then straightens. But the bend is an illusion. While tracking @fig-tae, the visual system allows for a momentary bias. Usefully, the bias is sensitive to experimental manipulation. @fig-tae2 shows the same Gabor with the same orientations, but the Gabor also moves. The movement largely eliminates the bending. The sensitivity of such biases to different experimental manipulations enables researchers to study how the visual system balances new information against the recent past. 

::: {#fig-tae}

```{r, tae}
p1 <- tibble::tibble(theta = seq(0, pi/4,length.out = 2),
                     frame = 1:2) |>
  dplyr::mutate(gab = purrr::map(theta, ~make_gabor(theta=.x, res = 13))) |>
  tidyr::unnest(cols=gab) |>
  ggplot2::ggplot(ggplot2::aes(x=x,y=y)) +
  ggplot2::geom_raster(ggplot2::aes(fill=value),show.legend=FALSE) +
  ggplot2::scale_fill_viridis_c(option="inferno") +
  gganimate::transition_states(frame) +
  ggplot2::theme_void() +
  ggplot2::coord_fixed()

gganimate::animate(p1, nframe=2, fps=1/3)
# gganimate::anim_save(filename="static/img/tae.gif", animation=anim)
# knitr::include_graphics('/img/tae.gif')
```

A Gabor alternates between two orientations.

:::


::: {#fig-tae2}

```{r, tae2}
p2 <- tibble::tibble(theta = seq(0, pi/4,length.out = 2),
                     frame = 1:2) |>
  dplyr::mutate(gab = purrr::map(theta, ~make_gabor(theta=.x, res = 13))) |>
  tidyr::unnest(cols = gab) |>
  ggplot2::ggplot(ggplot2::aes(x=x,y=y)) +
  ggplot2::geom_raster(ggplot2::aes(fill = value), show.legend = FALSE) +
  ggplot2::scale_fill_viridis_c(option = "inferno") +
  gganimate::transition_states(frame) +
  ggplot2::theme_void() +
  ggplot2::coord_fixed() +
  ggplot2::facet_wrap(~frame) +
  ggplot2::theme(strip.text = ggplot2::element_blank())

gganimate::animate(p2, nframe = 3, fps = 1/3, device = "ragg_png")
# gganimate::anim_save(filename="static/img/tae2.gif", animation=anim2)
# knitr::include_graphics('/img/tae2.gif')
```

A Gabor alternates between two orientations, appearing in a different location with each orientation.

:::

A closely effect is called _serial dependence_. Serial dependence occurs when participants report the orientations of sequentially presented, tilted Gabors [@fischer2014]. A visual mask to reduces the strong aftereffects present in @fig-tae and @fig-tae2 [@fig-gabor]^[The timing and spacing of this figure does not quite match a typical experiment. For example, participants take a few seconds to respond, so the amount of time between Gabors in this figure is too short.]. Even without the aftereffect, the perceptual-decision about one Gabor affects the perceptual-decision about the next; participants report orientations that consistently err toward the orientation of the most recently seen Gabor. Reports on the magnitude of the effect vary, but the error has an average maximum of less than a few degrees. However, serial dependence is affected by different manipulations than that the demonstration of Figures @fig-tae and @fig-tae2. For example, it appears insensitive to the location of the Gabors. This bias may therefore provide a unique way to study how current perception is not only biased by but toward the recent past.

::: {#fig-gabor}

```{r, gabor}
n_frames <- 2
p <- tibble::tibble(theta = seq(0,pi/2,length.out = n_frames*2),
                    frame = 1:(n_frames*2),
                    noise = rep(c(FALSE,TRUE), times=n_frames)) |>
  dplyr::mutate(gab = purrr::map(theta, ~make_gabor(theta=.x, res = 13))) |>
  tidyr::unnest(cols=gab) |>
  dplyr::mutate(value = dplyr::if_else(noise, runif(dplyr::n(), min = -1,max=1), value)) |>
  ggplot2::ggplot(ggplot2::aes(x=x,y=y)) +
  ggplot2::geom_raster(ggplot2::aes(fill=value),show.legend=FALSE) +
  ggplot2::scale_fill_viridis_c(option="inferno") +
  gganimate::transition_states(frame) +
  ggplot2::theme_void() +
  ggplot2::coord_fixed()

gganimate::animate(p, nframe=n_frames*2, fps=1, device = "ragg_png")
# gganimate::anim_save(filename="static/img/gabor.gif", animation=anim0)
# knitr::include_graphics('/img/gabor.gif')
```

Differently oriented Gabors presented with interspersed noise masks.

:::

However, it remains unclear whether serial dependence is a bias of perceptual or post-perceptual processes. That is, does serial dependence alter participants' perception of the Gabors, or does it alter how they report the orientation? The sequential timing of each trial -- in which participants respond in a designated period after seeing the Gabor -- does not imply that participants decide on an orientation only after they have finished perceiving the Gabor. For example, a participant can make decisions before the response period, and they can adopt a biased response strategy even before seeing the Gabor. Where and when to delineate between perception and decision, or whether they can be delineated, depends on assumptions about the relationship between perception and decisions. A tool like the [circular diffusion model](https://psadil.github.io/psadil/post/circular-diffusion-model-of-response-times/) can help make those assumptions explicit [@smith2016].

# References
